{
  "componentDescriptors": [
    {
      "hidden": false,
      "displayName": "REST Client",
      "description": "Use this component to make a REST API Call. Supported REST methods are: GET, POST, PUT, DELETE, HEAD, OPTIONS. The base REST Client configuration can be shared across multiple REST clients in case there is a common remote resource to make different requests to. The components supports basic an digest authentication with the remote server.",
      "fullyQualifiedName": "com.reedelk.rest.component.RestClient",
      "componentType": "PROCESSOR",
      "componentPropertyDescriptors": [
        {
          "example": "POST",
          "displayName": "Method",
          "propertyName": "method",
          "initValue": "GET",
          "propertyInfo": "The REST method to be used to make the request. Possible values are: GET, POST, PUT, DELETE, HEAD, OPTIONS.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
            "instance": {
              "nameAndDisplayNameMap": {
                "HEAD": "HEAD",
                "DELETE": "DELETE",
                "POST": "POST",
                "GET": "GET",
                "OPTIONS": "OPTIONS",
                "PUT": "PUT"
              },
              "type": "java.lang.Enum"
            }
          },
          "whenDescriptors": []
        },
        {
          "displayName": "Client config",
          "propertyName": "configuration",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
            "instance": {
              "shared": "YES",
              "collapsible": "NO",
              "typeFullyQualifiedName": "com.reedelk.rest.configuration.client.ClientConfiguration",
              "objectProperties": [
                {
                  "example": "localhost",
                  "displayName": "Host",
                  "propertyName": "host",
                  "initValue": "localhost",
                  "propertyInfo": "Sets the remote host the HTTP request will be sent to.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.String"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "8484",
                  "displayName": "Port",
                  "propertyName": "port",
                  "initValue": "80",
                  "propertyInfo": "Sets the remote port the HTTP request will be sent to.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "/api/v1",
                  "displayName": "Base path",
                  "propertyName": "basePath",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "Sets the base request path for all listeners using this configuration.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.String"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "HTTPS",
                  "displayName": "Protocol",
                  "propertyName": "protocol",
                  "initValue": "HTTP",
                  "propertyInfo": "The http protocol to be used in the request. Possible values are: \u003cb\u003eHTTP\u003c/b, \u003cb\u003eHTTPS\u003c/b\u003e.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
                    "instance": {
                      "nameAndDisplayNameMap": {
                        "HTTPS": "HTTPS",
                        "HTTP": "HTTP"
                      },
                      "type": "java.lang.Enum"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "10000",
                  "displayName": "Request timeout (ms)",
                  "propertyName": "requestTimeout",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "Returns the timeout in milliseconds used when requesting a connection from the connection manager. A timeout value of zero is interpreted as an infinite timeout.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "10000",
                  "displayName": "Connect timeout (ms)",
                  "propertyName": "connectTimeout",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "Determines the timeout in milliseconds until a connection is established.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "120000",
                  "displayName": "Socket timeout (ms)",
                  "propertyName": "socketTimeout",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "Defines the socket timeout in milliseconds, which is the timeout for waiting for data or, put differently, a maximum period inactivity between two consecutive data packets.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "30",
                  "hintValue": "20",
                  "displayName": "Max Pool Connections",
                  "propertyName": "maxPoolConnections",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "Max connections to be kept in the connection pool for all the requests to the given host.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "true",
                  "displayName": "Keep alive",
                  "propertyName": "keepAlive",
                  "initValue": "true",
                  "propertyInfo": "If true keeps the TCP connection open for multiple HTTP requests/responses.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Boolean"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "true",
                  "displayName": "Follow redirects",
                  "propertyName": "followRedirects",
                  "initValue": "true",
                  "propertyInfo": "If true, HTTP responses with redirects codes 3xx (301, 308) are automatically followed.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Boolean"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "true",
                  "displayName": "Expect continue",
                  "propertyName": "expectContinue",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "If true, sends Expect: 100-continue header in the initial request before sending the body.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Boolean"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "true",
                  "displayName": "Ignore self signed certificates",
                  "propertyName": "allowSelfSigned",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "If true, all requests to a host with a self signed certificate are not verified.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Boolean"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "DIGEST",
                  "displayName": "Authentication",
                  "propertyName": "authentication",
                  "initValue": "NONE",
                  "propertyInfo": "Specifies the type of authentication to be performed on the remote server. Possible values are: \u003cb\u003eNONE\u003c/b\u003e, \u003cb\u003eBASIC\u003c/b\u003e, \u003cb\u003eDIGEST\u003c/b\u003e.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
                    "instance": {
                      "nameAndDisplayNameMap": {
                        "DIGEST": "Digest",
                        "NONE": "None",
                        "BASIC": "Basic"
                      },
                      "type": "java.lang.Enum"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "displayName": "Basic authentication",
                  "propertyName": "basicAuthentication",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                    "instance": {
                      "shared": "NO",
                      "collapsible": "NO",
                      "typeFullyQualifiedName": "com.reedelk.rest.configuration.client.BasicAuthenticationConfiguration",
                      "objectProperties": [
                        {
                          "example": "user001",
                          "displayName": "Username",
                          "propertyName": "username",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "The username to be used in the remote server basic authentication.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.String"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "example": "password001",
                          "displayName": "Password",
                          "propertyName": "password",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "The password to be used in the remote server basic authentication.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePasswordDescriptor",
                            "instance": {
                              "type": "com.reedelk.runtime.api.annotation.Password"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "example": "true",
                          "displayName": "Preemptive",
                          "propertyName": "preemptive",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "Immediately sends basic authentication header before the server answers with unauthorized response code.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.Boolean"
                            }
                          },
                          "whenDescriptors": []
                        }
                      ],
                      "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                    }
                  },
                  "whenDescriptors": [
                    {
                      "propertyName": "authentication",
                      "propertyValue": "BASIC"
                    }
                  ]
                },
                {
                  "displayName": "Digest authentication",
                  "propertyName": "digestAuthentication",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                    "instance": {
                      "shared": "NO",
                      "collapsible": "NO",
                      "typeFullyQualifiedName": "com.reedelk.rest.configuration.client.DigestAuthenticationConfiguration",
                      "objectProperties": [
                        {
                          "example": "user001",
                          "displayName": "Username",
                          "propertyName": "username",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "The username to be used in the remote server digest authentication.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.String"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "example": "password001",
                          "displayName": "Password",
                          "propertyName": "password",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "The password to be used in the remote server digest authentication.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePasswordDescriptor",
                            "instance": {
                              "type": "com.reedelk.runtime.api.annotation.Password"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "example": "true",
                          "displayName": "Preemptive",
                          "propertyName": "preemptive",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "Immediately sends digest authentication header before the server answers with unauthorized response code.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.Boolean"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "example": "myRealm",
                          "displayName": "Realm",
                          "propertyName": "realm",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "Realm value to be used in the digest authentication.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.String"
                            }
                          },
                          "whenDescriptors": [
                            {
                              "propertyName": "preemptive",
                              "propertyValue": "true"
                            }
                          ]
                        },
                        {
                          "example": "123",
                          "displayName": "Nonce",
                          "propertyName": "nonce",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "Nonce value to be used in the digest authentication if known.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.String"
                            }
                          },
                          "whenDescriptors": [
                            {
                              "propertyName": "preemptive",
                              "propertyValue": "true"
                            }
                          ]
                        }
                      ],
                      "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                    }
                  },
                  "whenDescriptors": [
                    {
                      "propertyName": "authentication",
                      "propertyValue": "DIGEST"
                    }
                  ]
                },
                {
                  "example": "PROXY",
                  "displayName": "Proxy",
                  "propertyName": "proxy",
                  "initValue": "NONE",
                  "propertyInfo": "Enables or disable the use of proxy. Possible values are: \u003cb\u003eNONE\u003c/b\u003e, \u003cb\u003ePROXY\u003c/b\u003e.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
                    "instance": {
                      "nameAndDisplayNameMap": {
                        "PROXY": "Proxy",
                        "NONE": "None"
                      },
                      "type": "java.lang.Enum"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "displayName": "Proxy configuration",
                  "propertyName": "proxyConfiguration",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                    "instance": {
                      "shared": "NO",
                      "collapsible": "NO",
                      "typeFullyQualifiedName": "com.reedelk.rest.configuration.client.ProxyConfiguration",
                      "objectProperties": [
                        {
                          "example": "http://myproxy.com",
                          "displayName": "Host",
                          "propertyName": "host",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "The proxy host name.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.String"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "example": "8686",
                          "displayName": "Port",
                          "propertyName": "port",
                          "initValue": "8080",
                          "propertyInfo": "The proxy port.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.Integer"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "example": "DIGEST",
                          "displayName": "Authentication",
                          "propertyName": "authentication",
                          "initValue": "NONE",
                          "propertyInfo": "The proxy authentication scheme to use. Possible values are: \u003cb\u003eNONE\u003c/b\u003e, \u003cb\u003eBASIC\u003c/b\u003e, \u003cb\u003eDIGEST\u003c/b\u003e.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
                            "instance": {
                              "nameAndDisplayNameMap": {
                                "DIGEST": "Digest",
                                "NONE": "None",
                                "BASIC": "Basic"
                              },
                              "type": "java.lang.Enum"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "displayName": "Basic authentication",
                          "propertyName": "basicAuthentication",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                            "instance": {
                              "shared": "NO",
                              "collapsible": "NO",
                              "typeFullyQualifiedName": "com.reedelk.rest.configuration.client.ProxyBasicAuthenticationConfiguration",
                              "objectProperties": [
                                {
                                  "example": "myProxyUsername",
                                  "displayName": "Username",
                                  "propertyName": "username",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The username to be used in the basic proxy authentication.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "myProxyPassword",
                                  "displayName": "Password",
                                  "propertyName": "password",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The password to be used in the basic proxy authentication.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePasswordDescriptor",
                                    "instance": {
                                      "type": "com.reedelk.runtime.api.annotation.Password"
                                    }
                                  },
                                  "whenDescriptors": []
                                }
                              ],
                              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                            }
                          },
                          "whenDescriptors": [
                            {
                              "propertyName": "authentication",
                              "propertyValue": "BASIC"
                            }
                          ]
                        },
                        {
                          "displayName": "Digest authentication",
                          "propertyName": "digestAuthentication",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                            "instance": {
                              "shared": "NO",
                              "collapsible": "NO",
                              "typeFullyQualifiedName": "com.reedelk.rest.configuration.client.ProxyDigestAuthenticationConfiguration",
                              "objectProperties": [
                                {
                                  "example": "myProxyUsername",
                                  "displayName": "Username",
                                  "propertyName": "username",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The username to be used in the digest proxy authentication.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "myProxyPassword",
                                  "displayName": "Password",
                                  "propertyName": "password",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The password to be used in the digest proxy authentication.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePasswordDescriptor",
                                    "instance": {
                                      "type": "com.reedelk.runtime.api.annotation.Password"
                                    }
                                  },
                                  "whenDescriptors": []
                                }
                              ],
                              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                            }
                          },
                          "whenDescriptors": [
                            {
                              "propertyName": "authentication",
                              "propertyValue": "DIGEST"
                            }
                          ]
                        }
                      ],
                      "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                    }
                  },
                  "whenDescriptors": [
                    {
                      "propertyName": "proxy",
                      "propertyValue": "PROXY"
                    }
                  ]
                }
              ],
              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
            }
          },
          "whenDescriptors": []
        },
        {
          "example": "http://api.example.com/orders",
          "hintValue": "https://api.example.com",
          "displayName": "Base URL",
          "propertyName": "baseURL",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyInfo": "The base URL of the HTTP request. It may include a static request path.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
            "instance": {
              "type": "java.lang.String"
            }
          },
          "whenDescriptors": [
            {
              "propertyName": "configuration",
              "propertyValue": "###NULL###"
            },
            {
              "propertyName": "configuration",
              "propertyValue": "{\u0027ref\u0027: \u0027###BLANK###\u0027}"
            }
          ]
        },
        {
          "example": "/resource/{id}/{group}",
          "hintValue": "/resource/{id}",
          "displayName": "Path",
          "propertyName": "path",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyInfo": "The request path might contain parameters placeholders which will be bound to the values defined in the \u003ci\u003eHeaders and parameters\u003c/i\u003e \u003e \u003ci\u003ePath params\u003c/i\u003e map.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
            "instance": {
              "type": "java.lang.String"
            }
          },
          "whenDescriptors": []
        },
        {
          "example": "\u003ccode\u003econtext.myCustomPayload\u003c/code\u003e",
          "hintValue": "payload",
          "displayName": "Body",
          "propertyName": "body",
          "initValue": "#[message.payload()]",
          "propertyInfo": "Sets the payload of the HTTP request. It could be a dynamic or a static value.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor",
            "instance": {
              "type": "com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"
            }
          },
          "whenDescriptors": [
            {
              "propertyName": "method",
              "propertyValue": "DELETE"
            },
            {
              "propertyName": "method",
              "propertyValue": "POST"
            },
            {
              "propertyName": "method",
              "propertyValue": "PUT"
            }
          ]
        },
        {
          "example": "ALWAYS",
          "displayName": "Streaming",
          "propertyName": "streaming",
          "initValue": "AUTO",
          "propertyInfo": "Determines the strategy type the body will be sent to the server. When \u003ci\u003eStream\u003c/i\u003e the request body will be sent chunk by chunk without loading the entire content into memory. When \u003ci\u003eNone\u003c/i\u003e the body will be loaded into memory and then sent to the server. When \u003ci\u003eAuto\u003c/i\u003e the component will inspect the content of the body to determine the best strategy to send the HTTP request data.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
            "instance": {
              "nameAndDisplayNameMap": {
                "AUTO": "Auto",
                "NONE": "None",
                "ALWAYS": "Always"
              },
              "type": "java.lang.Enum"
            }
          },
          "whenDescriptors": [
            {
              "propertyName": "method",
              "propertyValue": "DELETE"
            },
            {
              "propertyName": "method",
              "propertyValue": "POST"
            },
            {
              "propertyName": "method",
              "propertyValue": "PUT"
            }
          ]
        },
        {
          "example": "X-Custom-Header \u003e \u003ccode\u003e\u0027X-Custom-\u0027 + message.payload() + \u0027 value\u0027\u003c/code\u003e",
          "displayName": "Headers",
          "propertyName": "headers",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyInfo": "Map of dynamic headers names \u003e values. The values are dynamic.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor",
            "instance": {
              "tabGroup": "Headers and parameters",
              "tabPlacement": "LEFT",
              "type": "com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"
            }
          },
          "whenDescriptors": []
        },
        {
          "example": "id \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e",
          "displayName": "Path params",
          "propertyName": "pathParameters",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyInfo": "Map of request path parameters names \u003e values. The values are dynamic.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor",
            "instance": {
              "tabGroup": "Headers and parameters",
              "tabPlacement": "LEFT",
              "type": "com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"
            }
          },
          "whenDescriptors": []
        },
        {
          "example": "id \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e",
          "displayName": "Query params",
          "propertyName": "queryParameters",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyInfo": "Map of request query parameters names \u003e values. The values are dynamic.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor",
            "instance": {
              "tabGroup": "Headers and parameters",
              "tabPlacement": "LEFT",
              "type": "com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"
            }
          },
          "whenDescriptors": []
        },
        {
          "displayName": "Advanced configuration",
          "propertyName": "advancedConfiguration",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
            "instance": {
              "shared": "NO",
              "collapsible": "YES",
              "typeFullyQualifiedName": "com.reedelk.rest.configuration.client.AdvancedConfiguration",
              "objectProperties": [
                {
                  "example": "16384",
                  "hintValue": "16384",
                  "displayName": "Response buffer size",
                  "propertyName": "responseBufferSize",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "The buffer size to be used while receiving the HTTP response.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "16384",
                  "hintValue": "16384",
                  "displayName": "Request buffer size",
                  "propertyName": "requestBufferSize",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "The buffer size to be used while sending the HTTP request.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                }
              ],
              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
            }
          },
          "whenDescriptors": []
        }
      ]
    },
    {
      "hidden": false,
      "displayName": "REST Listener",
      "description": "The REST Listener can be used to create a REST endpoint listening on a given port, post and path. The listening path might contain path segments which are matched whenever an HTTP request comes in. A REST Listener configuration might be shared across different REST Listener whenever there is a need to reuse a common endpoint configuration across different REST resources. The REST Listener is an Inbound component and it can only be placed at the beginning of a flow.",
      "fullyQualifiedName": "com.reedelk.rest.component.RestListener",
      "componentType": "INBOUND",
      "componentPropertyDescriptors": [
        {
          "displayName": "Configuration",
          "propertyName": "configuration",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
            "instance": {
              "shared": "YES",
              "collapsible": "NO",
              "typeFullyQualifiedName": "com.reedelk.rest.configuration.listener.ListenerConfiguration",
              "objectProperties": [
                {
                  "example": "localhost",
                  "hintValue": "localhost",
                  "displayName": "Host",
                  "propertyName": "host",
                  "initValue": "localhost",
                  "propertyInfo": "The host this REST listener will be bound to.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.String"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "9292",
                  "hintValue": "8080",
                  "displayName": "Port",
                  "propertyName": "port",
                  "initValue": "8080",
                  "propertyInfo": "The port this REST listener will be bound to.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "HTTPS",
                  "displayName": "Protocol",
                  "propertyName": "protocol",
                  "initValue": "HTTP",
                  "propertyInfo": "The http protocol to use. Possible values are: \u003cb\u003eHTTP\u003c/b\u003e, \u003cb\u003eHTTPS\u003c/b\u003e.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
                    "instance": {
                      "nameAndDisplayNameMap": {
                        "HTTPS": "HTTPS",
                        "HTTP": "HTTP"
                      },
                      "type": "java.lang.Enum"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "/api/v1",
                  "hintValue": "/api/v1",
                  "displayName": "Base path",
                  "propertyName": "basePath",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "The base path shared by all the listeners using this configuration.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.String"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "true",
                  "displayName": "Keep alive",
                  "propertyName": "keepAlive",
                  "initValue": "true",
                  "propertyInfo": "Enables socket keep alive for this listener.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Boolean"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "true",
                  "displayName": "Compress response",
                  "propertyName": "compress",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "If true the response is compressed before sending it to the client.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Boolean"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "30000",
                  "displayName": "Read timeout millis",
                  "propertyName": "readTimeoutMillis",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "Sets the socket read timeout for this listener in milliseconds.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "30000",
                  "displayName": "Connection timeout millis",
                  "propertyName": "connectionTimeoutMillis",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "Sets the socket connection timeout for this listener in milliseconds.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "5",
                  "displayName": "Socket backlog",
                  "propertyName": "socketBacklog",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "The number of pending connections the listener queue will hold.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "8192",
                  "displayName": "Max chunk size",
                  "propertyName": "maxChunkSize",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "The maximum length of the content of each chunk.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "example": "8192",
                  "displayName": "Max headers length",
                  "propertyName": "maxLengthOfAllHeaders",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyInfo": "The maximum length of all headers.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                    "instance": {
                      "type": "java.lang.Integer"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "displayName": "Security configuration",
                  "propertyName": "securityConfiguration",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                    "instance": {
                      "shared": "NO",
                      "collapsible": "NO",
                      "typeFullyQualifiedName": "com.reedelk.rest.configuration.listener.SecurityConfiguration",
                      "objectProperties": [
                        {
                          "example": "CERTIFICATE_AND_PRIVATE_KEY",
                          "displayName": "Type",
                          "propertyName": "type",
                          "initValue": "CERTIFICATE_AND_PRIVATE_KEY",
                          "propertyInfo": "Specifies the server security type. Possible values are: \u003cb\u003eCERTIFICATE_AND_PRIVATE_KEY\u003c/b\u003e, \u003cb\u003eKEY_STORE\u003c/b\u003e.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
                            "instance": {
                              "nameAndDisplayNameMap": {
                                "CERTIFICATE_AND_PRIVATE_KEY": "Certificate and private key",
                                "KEY_STORE": "Key store"
                              },
                              "type": "java.lang.Enum"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "displayName": "X.509 Certificate and private key",
                          "propertyName": "certificateAndPrivateKey",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                            "instance": {
                              "shared": "NO",
                              "collapsible": "NO",
                              "typeFullyQualifiedName": "com.reedelk.rest.configuration.listener.CertificateAndPrivateKeyConfiguration",
                              "objectProperties": [
                                {
                                  "example": "/var/certificates/cacert.crt",
                                  "hintValue": "/var/certificates/cacert.crt",
                                  "displayName": "Certificate",
                                  "propertyName": "certificateFile",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The path on the filesystem to the certificate file.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "/var/certificates/private.key",
                                  "hintValue": "/var/certificates/private.key",
                                  "displayName": "Private key",
                                  "propertyName": "privateKeyFile",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The path on the filesystem to the private key.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                }
                              ],
                              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                            }
                          },
                          "whenDescriptors": [
                            {
                              "propertyName": "type",
                              "propertyValue": "CERTIFICATE_AND_PRIVATE_KEY"
                            }
                          ]
                        },
                        {
                          "displayName": "Key store",
                          "propertyName": "keyStore",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                            "instance": {
                              "shared": "NO",
                              "collapsible": "NO",
                              "typeFullyQualifiedName": "com.reedelk.rest.configuration.listener.KeyStoreConfiguration",
                              "objectProperties": [
                                {
                                  "example": "/var/certificates/myKeyStore.jks",
                                  "displayName": "Path",
                                  "propertyName": "path",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The path on the filesystem of the key store.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "myKeyStorePassword",
                                  "displayName": "Password",
                                  "propertyName": "password",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The keystore password.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePasswordDescriptor",
                                    "instance": {
                                      "type": "com.reedelk.runtime.api.annotation.Password"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "JKS",
                                  "displayName": "Type",
                                  "propertyName": "type",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The keystore type.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "SunX509",
                                  "displayName": "Algorithm",
                                  "propertyName": "algorithm",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The keystore algorithm.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                }
                              ],
                              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                            }
                          },
                          "whenDescriptors": [
                            {
                              "propertyName": "type",
                              "propertyValue": "KEY_STORE"
                            }
                          ]
                        },
                        {
                          "example": "true",
                          "displayName": "Use trust store",
                          "propertyName": "useTrustStore",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyInfo": "If true the given trust store is used.",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                            "instance": {
                              "type": "java.lang.Boolean"
                            }
                          },
                          "whenDescriptors": []
                        },
                        {
                          "displayName": "Trust store configuration",
                          "propertyName": "trustStoreConfiguration",
                          "initValue": "###USE_DEFAULT_VALUE###",
                          "propertyType": {
                            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
                            "instance": {
                              "shared": "NO",
                              "collapsible": "NO",
                              "typeFullyQualifiedName": "com.reedelk.rest.configuration.listener.TrustStoreConfiguration",
                              "objectProperties": [
                                {
                                  "example": "/var/certificates/myTrustStore.jks",
                                  "displayName": "Path",
                                  "propertyName": "path",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The path on the filesystem of the trust store.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "myTrustStorePassword",
                                  "displayName": "Password",
                                  "propertyName": "password",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The trust store password.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePasswordDescriptor",
                                    "instance": {
                                      "type": "com.reedelk.runtime.api.annotation.Password"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "JKS",
                                  "displayName": "Type",
                                  "propertyName": "type",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The trust store type.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                },
                                {
                                  "example": "SunX509",
                                  "displayName": "Algorithm",
                                  "propertyName": "algorithm",
                                  "initValue": "###USE_DEFAULT_VALUE###",
                                  "propertyInfo": "The trust store algorithm.",
                                  "propertyType": {
                                    "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
                                    "instance": {
                                      "type": "java.lang.String"
                                    }
                                  },
                                  "whenDescriptors": []
                                }
                              ],
                              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                            }
                          },
                          "whenDescriptors": [
                            {
                              "propertyName": "useTrustStore",
                              "propertyValue": "true"
                            }
                          ]
                        }
                      ],
                      "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
                    }
                  },
                  "whenDescriptors": [
                    {
                      "propertyName": "protocol",
                      "propertyValue": "HTTPS"
                    }
                  ]
                }
              ],
              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
            }
          },
          "whenDescriptors": []
        },
        {
          "example": "/resource/{id}",
          "hintValue": "/resource/{id}",
          "displayName": "Path",
          "propertyName": "path",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyInfo": "The rest path this listener will be bound to. If present must start with \u0027/\u0027. The path might contain regexp, e.g: /{name:.*} which would match against anything it is compared to, or parameters /{group}/{id}. Path parameters are bound to a key/value map in the inbound message attributes.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypePrimitiveDescriptor",
            "instance": {
              "type": "java.lang.String"
            }
          },
          "whenDescriptors": []
        },
        {
          "example": "PUT",
          "displayName": "Method",
          "propertyName": "method",
          "initValue": "GET",
          "propertyInfo": "The REST Method this listener will be listening from.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
            "instance": {
              "nameAndDisplayNameMap": {
                "HEAD": "HEAD",
                "DELETE": "DELETE",
                "POST": "POST",
                "GET": "GET",
                "OPTIONS": "OPTIONS",
                "PUT": "PUT"
              },
              "type": "java.lang.Enum"
            }
          },
          "whenDescriptors": []
        },
        {
          "example": "ALWAYS",
          "displayName": "Streaming",
          "propertyName": "streaming",
          "initValue": "AUTO",
          "propertyInfo": "Determines the way the response body is sent to the client. When set to Auto and if the size of the payload is not clear, e.g. it is a stream of data, then it uses \u003cb\u003eTransfer-Encoding: chunked\u003c/b\u003e when sending data back to the client. Otherwise \u003cb\u003eContent-Length\u003c/b\u003e encoding with the size of the payload is used. When set to Always \u003cb\u003eTransfer-Encoding: chunked\u003c/b\u003e is always used, and when none \u003cb\u003eContent-Length\u003c/b\u003e is always used instead.",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeEnumDescriptor",
            "instance": {
              "nameAndDisplayNameMap": {
                "AUTO": "Auto",
                "NONE": "None",
                "ALWAYS": "Always"
              },
              "type": "java.lang.Enum"
            }
          },
          "whenDescriptors": []
        },
        {
          "displayName": "Response",
          "propertyName": "response",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
            "instance": {
              "shared": "NO",
              "collapsible": "YES",
              "typeFullyQualifiedName": "com.reedelk.rest.configuration.listener.Response",
              "objectProperties": [
                {
                  "hintValue": "content body text",
                  "displayName": "Response body",
                  "propertyName": "body",
                  "initValue": "#[message.payload()]",
                  "propertyInfo": "The body of the response might be a static or a dynamic value.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor",
                    "instance": {
                      "type": "com.reedelk.runtime.api.script.dynamicvalue.DynamicByteArray"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "hintValue": "200",
                  "displayName": "Response status",
                  "propertyName": "status",
                  "initValue": "200",
                  "propertyInfo": "The status code of the response might be a static or a dynamic value, e.g. could be a variable defined in the flow context: \u003ci\u003econtext.myResponseStatus\u003c/i\u003e.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor",
                    "instance": {
                      "type": "com.reedelk.runtime.api.script.dynamicvalue.DynamicInteger"
                    }
                  },
                  "whenDescriptors": []
                },
                {
                  "displayName": "Additional Headers",
                  "propertyName": "headers",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor",
                    "instance": {
                      "tabPlacement": "LEFT",
                      "type": "com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"
                    }
                  },
                  "whenDescriptors": []
                }
              ],
              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
            }
          },
          "whenDescriptors": []
        },
        {
          "displayName": "Error response",
          "propertyName": "errorResponse",
          "initValue": "###USE_DEFAULT_VALUE###",
          "propertyType": {
            "classname": "com.reedelk.module.descriptor.model.TypeObjectDescriptor",
            "instance": {
              "shared": "NO",
              "collapsible": "YES",
              "typeFullyQualifiedName": "com.reedelk.rest.configuration.listener.ErrorResponse",
              "objectProperties": [
                {
                  "hintValue": "error body text",
                  "displayName": "Response body",
                  "propertyName": "body",
                  "initValue": "#[error]",
                  "propertyInfo": "The body of the error response might be a static or a dynamic value.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor",
                    "instance": {
                      "type": "com.reedelk.runtime.api.script.dynamicvalue.DynamicByteArray"
                    }
                  },
                  "whenDescriptors": [],
                  "autoCompleteContributorDescriptor": {
                    "error": true,
                    "message": false,
                    "context": true,
                    "contributions": []
                  }
                },
                {
                  "hintValue": "500",
                  "displayName": "Response status",
                  "propertyName": "status",
                  "initValue": "500",
                  "propertyInfo": "The status code of the error response might be a static or a dynamic value, e.g. could be a variable defined in the flow context: \u003ci\u003econtext.myErrorResponseStatus\u003c/i\u003e.",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor",
                    "instance": {
                      "type": "com.reedelk.runtime.api.script.dynamicvalue.DynamicInteger"
                    }
                  },
                  "whenDescriptors": [],
                  "autoCompleteContributorDescriptor": {
                    "error": true,
                    "message": false,
                    "context": true,
                    "contributions": []
                  }
                },
                {
                  "displayName": "Additional Headers",
                  "propertyName": "headers",
                  "initValue": "###USE_DEFAULT_VALUE###",
                  "propertyType": {
                    "classname": "com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor",
                    "instance": {
                      "tabPlacement": "LEFT",
                      "type": "com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"
                    }
                  },
                  "whenDescriptors": [],
                  "autoCompleteContributorDescriptor": {
                    "error": true,
                    "message": false,
                    "context": true,
                    "contributions": []
                  }
                }
              ],
              "type": "com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"
            }
          },
          "whenDescriptors": []
        }
      ]
    }
  ],
  "autocompleteContributorDescriptors": [
    {
      "error": false,
      "message": false,
      "context": false,
      "contributions": [
        "MultipartMessage[VARIABLE:MultipartMessage]",
        "MultipartMessage.part(\u0027\u0027)[FUNCTION:MultipartPartBuilder:2]"
      ]
    }
  ]
}