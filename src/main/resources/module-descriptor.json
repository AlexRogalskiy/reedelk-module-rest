{"name":"module-rest","components":[{"hidden":false,"type":"PROCESSOR","displayName":"REST Client","description":"Use this component to make a REST API Call. Supported REST methods are: GET, POST, PUT, DELETE, HEAD, OPTIONS. The base REST Client configuration can be shared across multiple REST clients in case there is a common remote resource to make different requests to. The components supports basic an digest authentication with the remote server.","fullyQualifiedName":"com.reedelk.rest.component.RestClient","properties":[{"name":"configuration","initValue":"###USE_DEFAULT_VALUE###","displayName":"Client config","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"YES","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.RestClientConfiguration","objectProperties":[{"name":"host","example":"localhost","initValue":"localhost","description":"Sets the remote host the HTTP request will be sent to.","displayName":"Host","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"port","example":"8484","initValue":"80","description":"Sets the remote port the HTTP request will be sent to.","displayName":"Port","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"basePath","example":"/api/v1","initValue":"###USE_DEFAULT_VALUE###","description":"Sets the base request path for all listeners using this configuration.","displayName":"Base path","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"protocol","example":"HTTPS","initValue":"HTTP","description":"The http protocol to be used in the request. Possible values are: \u003cb\u003eHTTP\u003c/b, \u003cb\u003eHTTPS\u003c/b\u003e.","displayName":"Protocol","defaultValue":"HTTP","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"HTTPS":"HTTPS","HTTP":"HTTP"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"requestTimeout","example":"10000","initValue":"###USE_DEFAULT_VALUE###","description":"Returns the timeout in milliseconds used when requesting a connection from the connection manager. A timeout value of zero is interpreted as an infinite timeout.","displayName":"Request timeout (ms)","defaultValue":"6000","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"connectTimeout","example":"10000","initValue":"###USE_DEFAULT_VALUE###","description":"Determines the timeout in milliseconds until a connection is established.","displayName":"Connect timeout (ms)","defaultValue":"6000","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"socketTimeout","example":"120000","initValue":"###USE_DEFAULT_VALUE###","description":"Defines the socket timeout in milliseconds, which is the timeout for waiting for data or, put differently, a maximum period inactivity between two consecutive data packets.","displayName":"Socket timeout (ms)","defaultValue":"60000","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"maxPoolConnections","example":"30","initValue":"###USE_DEFAULT_VALUE###","hintValue":"20","description":"Max connections to be kept in the connection pool for all the requests to the given host.","displayName":"Max Pool Connections","defaultValue":"10","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"keepAlive","example":"true","initValue":"true","description":"If true keeps the TCP connection open for multiple HTTP requests/responses.","displayName":"Keep alive","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"followRedirects","example":"true","initValue":"true","description":"If true, HTTP responses with redirects codes 3xx (301, 308) are automatically followed.","displayName":"Follow redirects","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"expectContinue","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"If true, sends Expect: 100-continue header in the initial request before sending the body.","displayName":"Expect continue","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"allowSelfSigned","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"If true, all requests to a host with a self signed certificate are not verified.","displayName":"Ignore self signed certificates","defaultValue":"false","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"authentication","example":"DIGEST","initValue":"NONE","description":"Specifies the type of authentication to be performed on the remote server. Possible values are: \u003cb\u003eNONE\u003c/b\u003e, \u003cb\u003eBASIC\u003c/b\u003e, \u003cb\u003eDIGEST\u003c/b\u003e.","displayName":"Authentication","defaultValue":"NONE","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"DIGEST":"Digest","NONE":"None","BASIC":"Basic"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"basicAuthentication","initValue":"###USE_DEFAULT_VALUE###","displayName":"Basic authentication","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.client.BasicAuthenticationConfiguration","objectProperties":[{"name":"username","example":"user001","initValue":"###USE_DEFAULT_VALUE###","description":"The username to be used in the remote server basic authentication.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"password","example":"password001","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used in the remote server basic authentication.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.TypePasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[],"autocompleteVariables":[]},{"name":"preemptive","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"Immediately sends basic authentication header before the server answers with unauthorized response code.","displayName":"Preemptive","defaultValue":"false","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"authentication","propertyValue":"BASIC"}],"autocompleteVariables":[]},{"name":"digestAuthentication","initValue":"###USE_DEFAULT_VALUE###","displayName":"Digest authentication","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.client.DigestAuthenticationConfiguration","objectProperties":[{"name":"username","example":"user001","initValue":"###USE_DEFAULT_VALUE###","description":"The username to be used in the remote server digest authentication.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"password","example":"password001","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used in the remote server digest authentication.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.TypePasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[],"autocompleteVariables":[]},{"name":"preemptive","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"Immediately sends digest authentication header before the server answers with unauthorized response code.","displayName":"Preemptive","defaultValue":"false","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"realm","example":"myRealm","initValue":"###USE_DEFAULT_VALUE###","description":"Realm value to be used in the digest authentication.","displayName":"Realm","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[{"propertyName":"preemptive","propertyValue":"true"}],"autocompleteVariables":[]},{"name":"nonce","example":"123","initValue":"###USE_DEFAULT_VALUE###","description":"Nonce value to be used in the digest authentication if known.","displayName":"Nonce","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[{"propertyName":"preemptive","propertyValue":"true"}],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"authentication","propertyValue":"DIGEST"}],"autocompleteVariables":[]},{"name":"proxy","example":"PROXY","initValue":"NONE","description":"Enables or disable the use of proxy. Possible values are: \u003cb\u003eNONE\u003c/b\u003e, \u003cb\u003ePROXY\u003c/b\u003e.","displayName":"Proxy","defaultValue":"NONE","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"PROXY":"Proxy","NONE":"None"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"proxyConfiguration","initValue":"###USE_DEFAULT_VALUE###","displayName":"Proxy configuration","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.client.ProxyConfiguration","objectProperties":[{"name":"host","example":"http://myproxy.com","initValue":"###USE_DEFAULT_VALUE###","description":"The proxy host name.","displayName":"Host","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"port","example":"8686","initValue":"8080","description":"The proxy port.","displayName":"Port","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"authentication","example":"DIGEST","initValue":"NONE","description":"The proxy authentication scheme to use. Possible values are: \u003cb\u003eNONE\u003c/b\u003e, \u003cb\u003eBASIC\u003c/b\u003e, \u003cb\u003eDIGEST\u003c/b\u003e.","displayName":"Authentication","defaultValue":"NONE","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"DIGEST":"Digest","NONE":"None","BASIC":"Basic"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"basicAuthentication","initValue":"###USE_DEFAULT_VALUE###","displayName":"Basic authentication","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.client.ProxyBasicAuthenticationConfiguration","objectProperties":[{"name":"username","example":"myProxyUsername","initValue":"###USE_DEFAULT_VALUE###","description":"The username to be used in the basic proxy authentication.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"password","example":"myProxyPassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used in the basic proxy authentication.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.TypePasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"authentication","propertyValue":"BASIC"}],"autocompleteVariables":[]},{"name":"digestAuthentication","initValue":"###USE_DEFAULT_VALUE###","displayName":"Digest authentication","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.client.ProxyDigestAuthenticationConfiguration","objectProperties":[{"name":"username","example":"myProxyUsername","initValue":"###USE_DEFAULT_VALUE###","description":"The username to be used in the digest proxy authentication.","displayName":"Username","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"password","example":"myProxyPassword","initValue":"###USE_DEFAULT_VALUE###","description":"The password to be used in the digest proxy authentication.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.TypePasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"authentication","propertyValue":"DIGEST"}],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"proxy","propertyValue":"PROXY"}],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[],"autocompleteVariables":[]},{"name":"baseURL","example":"http://api.example.com/orders","initValue":"###USE_DEFAULT_VALUE###","hintValue":"https://api.example.com","description":"The base URL of the HTTP request. It may include a static request path.","displayName":"Base URL","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[{"propertyName":"configuration","propertyValue":"###NULL###"},{"propertyName":"configuration","propertyValue":"{\u0027ref\u0027: \u0027###BLANK###\u0027}"}],"autocompleteVariables":[]},{"name":"path","example":"/resource/{id}/{group}","initValue":"###USE_DEFAULT_VALUE###","hintValue":"/resource/{id}","description":"The request path might contain parameters placeholders which will be bound to the values defined in the \u003ci\u003eHeaders and parameters\u003c/i\u003e \u003e \u003ci\u003ePath params\u003c/i\u003e map.","displayName":"Path","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"method","example":"POST","initValue":"GET","description":"The REST method to be used to make the request. Possible values are: GET, POST, PUT, DELETE, HEAD, OPTIONS.","displayName":"Method","defaultValue":"GET","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"HEAD":"HEAD","DELETE":"DELETE","POST":"POST","GET":"GET","OPTIONS":"OPTIONS","PUT":"PUT"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"body","example":"\u003ccode\u003econtext.myCustomPayload\u003c/code\u003e","initValue":"#[message.payload()]","hintValue":"payload","description":"Sets the payload of the HTTP request. It could be a dynamic or a static value.","displayName":"Body","defaultValue":"\u003ccode\u003emessage.payload()\u003c/code\u003e","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicObject"}},"whens":[{"propertyName":"method","propertyValue":"DELETE"},{"propertyName":"method","propertyValue":"POST"},{"propertyName":"method","propertyValue":"PUT"}],"autocompleteVariables":[]},{"name":"streaming","example":"ALWAYS","initValue":"AUTO","description":"Determines the strategy type the body will be sent to the server. When \u003ci\u003eStream\u003c/i\u003e the request body will be sent chunk by chunk without loading the entire content into memory. When \u003ci\u003eNone\u003c/i\u003e the body will be loaded into memory and then sent to the server. When \u003ci\u003eAuto\u003c/i\u003e the component will inspect the content of the body to determine the best strategy to send the HTTP request data.","displayName":"Streaming","defaultValue":"AUTO","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"AUTO":"Auto","NONE":"None","ALWAYS":"Always"},"type":"java.lang.Enum"}},"whens":[{"propertyName":"method","propertyValue":"DELETE"},{"propertyName":"method","propertyValue":"POST"},{"propertyName":"method","propertyValue":"PUT"}],"autocompleteVariables":[]},{"name":"headers","example":"X-Custom-Header \u003e \u003ccode\u003e\u0027X-Custom-\u0027 + message.payload() + \u0027 value\u0027\u003c/code\u003e","initValue":"###USE_DEFAULT_VALUE###","description":"Map of dynamic headers names \u003e values. The values are dynamic.","displayName":"Headers","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor","instance":{"tabGroup":"Headers and parameters","tabPlacement":"LEFT","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"}},"whens":[],"autocompleteVariables":[]},{"name":"pathParameters","example":"id \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e","initValue":"###USE_DEFAULT_VALUE###","description":"Map of request path parameters names \u003e values. The values are dynamic.","displayName":"Path params","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor","instance":{"tabGroup":"Headers and parameters","tabPlacement":"LEFT","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"}},"whens":[],"autocompleteVariables":[]},{"name":"queryParameters","example":"id \u003e \u003ccode\u003emessage.payload()\u003c/code\u003e","initValue":"###USE_DEFAULT_VALUE###","description":"Map of request query parameters names \u003e values. The values are dynamic.","displayName":"Query params","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor","instance":{"tabGroup":"Headers and parameters","tabPlacement":"LEFT","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"}},"whens":[],"autocompleteVariables":[]},{"name":"advancedConfiguration","initValue":"###USE_DEFAULT_VALUE###","displayName":"Advanced configuration","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"YES","typeFullyQualifiedName":"com.reedelk.rest.component.client.AdvancedConfiguration","objectProperties":[{"name":"responseBufferSize","example":"16384","initValue":"###USE_DEFAULT_VALUE###","hintValue":"16384","description":"The buffer size to be used while receiving the HTTP response.","displayName":"Response buffer size","defaultValue":"16384","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"requestBufferSize","example":"16384","initValue":"###USE_DEFAULT_VALUE###","hintValue":"16384","description":"The buffer size to be used while sending the HTTP request.","displayName":"Request buffer size","defaultValue":"16384","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[],"autocompleteVariables":[]}]},{"hidden":false,"type":"INBOUND","displayName":"REST Listener","description":"The REST Listener can be used to create a REST endpoint listening on a given port, post and path. The listening path might contain path segments which are matched whenever an HTTP request comes in. A REST Listener configuration might be shared across different REST Listener whenever there is a need to reuse a common endpoint configuration across different REST resources. The REST Listener is an Inbound component and it can only be placed at the beginning of a flow.","fullyQualifiedName":"com.reedelk.rest.component.RestListener","properties":[{"name":"configuration","initValue":"###USE_DEFAULT_VALUE###","displayName":"Configuration","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"YES","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.RestListenerConfiguration","objectProperties":[{"name":"host","example":"localhost","initValue":"localhost","hintValue":"localhost","description":"The host this REST listener will be bound to.","displayName":"Host","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"port","example":"9292","initValue":"8080","hintValue":"8080","description":"The port this REST listener will be bound to.","displayName":"Port","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"protocol","example":"HTTPS","initValue":"HTTP","description":"The http protocol to use. Possible values are: \u003cb\u003eHTTP\u003c/b\u003e, \u003cb\u003eHTTPS\u003c/b\u003e.","displayName":"Protocol","defaultValue":"HTTP","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"HTTPS":"HTTPS","HTTP":"HTTP"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"basePath","example":"/api/v1","initValue":"###USE_DEFAULT_VALUE###","hintValue":"/api/v1","description":"The base path shared by all the listeners using this configuration.","displayName":"Base path","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"keepAlive","example":"true","initValue":"true","description":"Enables socket keep alive for this listener.","displayName":"Keep alive","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"compress","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"If true the response is compressed before sending it to the client.","displayName":"Compress response","defaultValue":"false","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"readTimeoutMillis","example":"30000","initValue":"###USE_DEFAULT_VALUE###","description":"Sets the socket read timeout for this listener in milliseconds.","displayName":"Read timeout millis","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"connectionTimeoutMillis","example":"30000","initValue":"###USE_DEFAULT_VALUE###","description":"Sets the socket connection timeout for this listener in milliseconds.","displayName":"Connection timeout millis","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"socketBacklog","example":"5","initValue":"###USE_DEFAULT_VALUE###","description":"The number of pending connections the listener queue will hold.","displayName":"Socket backlog","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"maxChunkSize","example":"8192","initValue":"###USE_DEFAULT_VALUE###","description":"The maximum length of the content of each chunk.","displayName":"Max chunk size","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"maxLengthOfAllHeaders","example":"8192","initValue":"###USE_DEFAULT_VALUE###","description":"The maximum length of all headers.","displayName":"Max headers length","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Integer"}},"whens":[],"autocompleteVariables":[]},{"name":"securityConfiguration","initValue":"###USE_DEFAULT_VALUE###","displayName":"Security configuration","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.listener.SecurityConfiguration","objectProperties":[{"name":"type","example":"CERTIFICATE_AND_PRIVATE_KEY","initValue":"CERTIFICATE_AND_PRIVATE_KEY","description":"Specifies the server security type. Possible values are: \u003cb\u003eCERTIFICATE_AND_PRIVATE_KEY\u003c/b\u003e, \u003cb\u003eKEY_STORE\u003c/b\u003e.","displayName":"Type","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"CERTIFICATE_AND_PRIVATE_KEY":"Certificate and private key","KEY_STORE":"Key store"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"certificateAndPrivateKey","initValue":"###USE_DEFAULT_VALUE###","displayName":"X.509 Certificate and private key","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.listener.CertificateAndPrivateKeyConfiguration","objectProperties":[{"name":"certificateFile","example":"/var/certificates/cacert.crt","initValue":"###USE_DEFAULT_VALUE###","hintValue":"/var/certificates/cacert.crt","description":"The path on the filesystem to the certificate file.","displayName":"Certificate","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"privateKeyFile","example":"/var/certificates/private.key","initValue":"###USE_DEFAULT_VALUE###","hintValue":"/var/certificates/private.key","description":"The path on the filesystem to the private key.","displayName":"Private key","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"type","propertyValue":"CERTIFICATE_AND_PRIVATE_KEY"}],"autocompleteVariables":[]},{"name":"keyStore","initValue":"###USE_DEFAULT_VALUE###","displayName":"Key store","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.listener.KeyStoreConfiguration","objectProperties":[{"name":"path","example":"/var/certificates/myKeyStore.jks","initValue":"###USE_DEFAULT_VALUE###","description":"The path on the filesystem of the key store.","displayName":"Path","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"password","example":"myKeyStorePassword","initValue":"###USE_DEFAULT_VALUE###","description":"The keystore password.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.TypePasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[],"autocompleteVariables":[]},{"name":"type","example":"JKS","initValue":"###USE_DEFAULT_VALUE###","description":"The keystore type.","displayName":"Type","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"algorithm","example":"SunX509","initValue":"###USE_DEFAULT_VALUE###","description":"The keystore algorithm.","displayName":"Algorithm","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"type","propertyValue":"KEY_STORE"}],"autocompleteVariables":[]},{"name":"useTrustStore","example":"true","initValue":"###USE_DEFAULT_VALUE###","description":"If true the given trust store is used.","displayName":"Use trust store","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"trustStoreConfiguration","initValue":"###USE_DEFAULT_VALUE###","displayName":"Trust store configuration","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.listener.TrustStoreConfiguration","objectProperties":[{"name":"path","example":"/var/certificates/myTrustStore.jks","initValue":"###USE_DEFAULT_VALUE###","description":"The path on the filesystem of the trust store.","displayName":"Path","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"password","example":"myTrustStorePassword","initValue":"###USE_DEFAULT_VALUE###","description":"The trust store password.","displayName":"Password","type":{"classname":"com.reedelk.module.descriptor.model.TypePasswordDescriptor","instance":{"type":"com.reedelk.runtime.api.annotation.Password"}},"whens":[],"autocompleteVariables":[]},{"name":"type","example":"JKS","initValue":"###USE_DEFAULT_VALUE###","description":"The trust store type.","displayName":"Type","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"algorithm","example":"SunX509","initValue":"###USE_DEFAULT_VALUE###","description":"The trust store algorithm.","displayName":"Algorithm","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"useTrustStore","propertyValue":"true"}],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[{"propertyName":"protocol","propertyValue":"HTTPS"}],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[],"autocompleteVariables":[]},{"name":"path","example":"/resource/{id}","initValue":"###USE_DEFAULT_VALUE###","hintValue":"/resource/{id}","description":"The rest path this listener will be bound to. If present must start with \u0027/\u0027. The path might contain regexp, e.g: /{name:.*} which would match against anything it is compared to, or parameters /{group}/{id}. Path parameters are bound to a map in the out message attributes. The following script expression can be used to retrieve request path parameters: \u003ccode\u003emessage.attributes().pathParams\u003c/code\u003e.","displayName":"Path","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"method","example":"PUT","initValue":"GET","description":"The REST Method this listener will be listening from.","displayName":"Method","defaultValue":"GET","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"HEAD":"HEAD","DELETE":"DELETE","POST":"POST","GET":"GET","OPTIONS":"OPTIONS","PUT":"PUT"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"streaming","example":"ALWAYS","initValue":"AUTO","description":"Determines the way the response body is sent to the client. When set to Auto and if the size of the payload is not clear, e.g. it is a stream of data, then it uses \u003cb\u003eTransfer-Encoding: chunked\u003c/b\u003e when sending data back to the client. Otherwise \u003cb\u003eContent-Length\u003c/b\u003e encoding with the size of the payload is used. When set to Always \u003cb\u003eTransfer-Encoding: chunked\u003c/b\u003e is always used, and when none \u003cb\u003eContent-Length\u003c/b\u003e is always used instead.","displayName":"Streaming","type":{"classname":"com.reedelk.module.descriptor.model.TypeEnumDescriptor","instance":{"nameAndDisplayNameMap":{"AUTO":"Auto","NONE":"None","ALWAYS":"Always"},"type":"java.lang.Enum"}},"whens":[],"autocompleteVariables":[]},{"name":"response","initValue":"###USE_DEFAULT_VALUE###","displayName":"Response","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"YES","typeFullyQualifiedName":"com.reedelk.rest.component.listener.Response","objectProperties":[{"name":"body","initValue":"#[message.payload()]","hintValue":"content body text","description":"The body of the response might be a static or a dynamic value.","displayName":"Response body","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicByteArray"}},"whens":[],"autocompleteVariables":[]},{"name":"status","initValue":"200","hintValue":"200","description":"The status code of the response might be a static or a dynamic value, e.g. could be a variable defined in the flow context: \u003ci\u003econtext.myResponseStatus\u003c/i\u003e.","displayName":"Response status","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicInteger"}},"whens":[],"autocompleteVariables":[]},{"name":"headers","initValue":"###USE_DEFAULT_VALUE###","description":"Additional headers to be set in the HTTP response.","displayName":"Additional Headers","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor","instance":{"tabPlacement":"LEFT","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[],"autocompleteVariables":[]},{"name":"errorResponse","initValue":"###USE_DEFAULT_VALUE###","displayName":"Error response","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"YES","typeFullyQualifiedName":"com.reedelk.rest.component.listener.ErrorResponse","objectProperties":[{"name":"body","initValue":"#[error]","hintValue":"error body text","description":"The body of the error response might be a static or a dynamic value.","displayName":"Response body","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicByteArray"}},"whens":[],"autocompleteVariables":[{"name":"error","type":"Error"},{"name":"context","type":"FlowContext"}]},{"name":"status","initValue":"500","hintValue":"500","description":"The status code of the error response might be a static or a dynamic value, e.g. could be a variable defined in the flow context: \u003ccode\u003econtext.myErrorResponseStatus\u003c/code\u003e.","displayName":"Response status","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicValueDescriptor","instance":{"type":"com.reedelk.runtime.api.script.dynamicvalue.DynamicInteger"}},"whens":[],"autocompleteVariables":[{"name":"error","type":"Error"},{"name":"context","type":"FlowContext"}]},{"name":"headers","initValue":"###USE_DEFAULT_VALUE###","description":"Additional headers to be set in the HTTP error response.","displayName":"Additional Headers","type":{"classname":"com.reedelk.module.descriptor.model.TypeDynamicMapDescriptor","instance":{"tabPlacement":"LEFT","type":"com.reedelk.runtime.api.script.dynamicmap.DynamicStringMap"}},"whens":[],"autocompleteVariables":[{"name":"error","type":"Error"},{"name":"context","type":"FlowContext"}]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[],"autocompleteVariables":[]},{"name":"openApiConfiguration","initValue":"###USE_DEFAULT_VALUE###","displayName":"Open API configuration","type":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"YES","typeFullyQualifiedName":"com.reedelk.rest.component.listener.OpenApiConfiguration","objectProperties":[{"name":"exclude","initValue":"###USE_DEFAULT_VALUE###","displayName":"Exclude","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.Boolean"}},"whens":[],"autocompleteVariables":[]},{"name":"responses","initValue":"###USE_DEFAULT_VALUE###","displayName":"Responses","type":{"classname":"com.reedelk.module.descriptor.model.TypeMapDescriptor","instance":{"tabPlacement":"LEFT","valueType":{"classname":"com.reedelk.module.descriptor.model.TypeObjectDescriptor","instance":{"shared":"NO","collapsible":"NO","typeFullyQualifiedName":"com.reedelk.rest.component.listener.OpenApiResponse","objectProperties":[{"name":"example","initValue":"###USE_DEFAULT_VALUE###","displayName":"Example","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"schema","initValue":"###USE_DEFAULT_VALUE###","displayName":"Schema","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]},{"name":"mediaType","initValue":"###USE_DEFAULT_VALUE###","displayName":"Media Type","type":{"classname":"com.reedelk.module.descriptor.model.TypePrimitiveDescriptor","instance":{"type":"java.lang.String"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"type":"java.util.Map"}},"whens":[],"autocompleteVariables":[]}],"type":"com.reedelk.module.descriptor.model.TypeObjectDescriptor$TypeObject"}},"whens":[],"autocompleteVariables":[]}]}],"autocompleteItems":[{"type":"MultipartBuilder","token":"part","example":"MultipartBuilder.part(\u0027binaryContent\u0027).binary(message.payload()).attribute(\u0027filename\u0027,\u0027my_file.bin\u0027).part(\u0027textContent\u0027).text(\u0027This is a multipart test\u0027).build();","signature":"part(partName: String)","returnType":"MultipartPartBuilder","description":"Creates a new MultipartBuilder object containing one part with the given partName.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartBuilder","token":"attribute","example":"MultipartBuilder.part(\u0027binaryContent\u0027).attribute(\u0027filename\u0027,\u0027my_image.png\u0027)","signature":"attribute(key: String, value: String)","returnType":"MultipartPartBuilder","description":"Adds a new attribute with the given key and value to the part object.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartBuilder","token":"binary","example":"MultipartBuilder.part(\u0027binaryContent\u0027).binary(message.payload())","signature":"binary(data: byte[])","returnType":"MultipartPartBuilder","description":"Sets binary data to the current part object. Default mime type is \u0027application/octet-stream\u0027.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartBuilder","token":"text","example":"MultipartBuilder.part(\u0027textContent\u0027).text(message.payload())","signature":"text(data: String)","returnType":"MultipartPartBuilder","description":"Sets text data to the current part object. Default mime type is \u0027text/plain\u0027.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartBuilder","token":"binaryWithMimeType","example":"MultipartBuilder.part(\u0027binaryContent\u0027).binaryWithMimeType(message.payload(), \u0027application/octet-stream\u0027)","signature":"binaryWithMimeType(data: byte[], mimeType: String)","returnType":"MultipartPartBuilder","description":"Sets binary data to the current part object with the given mime type.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartBuilder","token":"textWithMimeType","example":"MultipartBuilder.part(\u0027textContent\u0027).textWithMimeType(message.payload(), \u0027text/plain\u0027)","signature":"textWithMimeType(data: String, mimeType: String)","returnType":"MultipartPartBuilder","description":"Sets text data to the current part object with the given mime type.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartBuilder","token":"part","example":"MultipartBuilder.part(\u0027textContent\u0027).text(\u0027sample text\u0027).part(\u0027binaryContent\u0027).binary(message.payload()).build()","signature":"part(partName: String)","returnType":"MultipartPartBuilder","description":"Adds a new part to the Multipart payload with the given partName.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartBuilder","token":"build","example":"MultipartBuilder.part(\u0027textContent\u0027).text(\u0027sample text\u0027).build()","signature":"build()","returnType":"Parts","description":"Creates the Multipart object with all the configured parts.","cursorOffset":0,"itemType":"FUNCTION"},{"type":"MultipartPartsBuilder","token":"part","example":"MultipartBuilder.part(\u0027textContent\u0027).text(\u0027sample text\u0027).part(\u0027binaryContent\u0027).binary(message.payload()).build()","signature":"part(partName: String)","returnType":"MultipartPartBuilder","description":"Adds a new part to the Multipart payload with the given partName.","cursorOffset":1,"itemType":"FUNCTION"},{"type":"MultipartPartsBuilder","token":"build","example":"MultipartBuilder.part(\u0027textContent\u0027).text(\u0027sample text\u0027).build()","signature":"build()","returnType":"Parts","description":"Creates the Multipart object with all the configured parts.","cursorOffset":0,"itemType":"FUNCTION"}],"autocompleteTypes":[{"global":true,"type":"MultipartBuilder","description":"The MultipartBuilder type allows to build REST Multipart messages. A Multipart message can be used as a payload to post data to a REST endpoint using the REST Client component."},{"global":false,"type":"MultipartPartBuilder","description":"The MultipartPartBuilder allows to build a REST Part object. The MultipartPartBuilder type is used together wihth MultipartBuilder to build REST Multipart payloads."},{"global":false,"type":"MultipartPartsBuilder","description":"Multipart parts builder allows to create multiple parts"}]}